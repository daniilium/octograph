/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './pages/__root'
import { Route as IndexRouteImport } from './pages/index'
import { Route as TokenIndexRouteImport } from './pages/token/index'
import { Route as SignupIndexRouteImport } from './pages/signup/index'
import { Route as ProfileIndexRouteImport } from './pages/profile/index'
import { Route as PagesIndexRouteImport } from './pages/pages/index'
import { Route as LogoutIndexRouteImport } from './pages/logout/index'
import { Route as LoginIndexRouteImport } from './pages/login/index'
import { Route as PagePageIdRouteImport } from './pages/page/$pageId'
import { Route as LoginTokenRouteImport } from './pages/login/$token'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TokenIndexRoute = TokenIndexRouteImport.update({
  id: '/token/',
  path: '/token/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const PagesIndexRoute = PagesIndexRouteImport.update({
  id: '/pages/',
  path: '/pages/',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutIndexRoute = LogoutIndexRouteImport.update({
  id: '/logout/',
  path: '/logout/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const PagePageIdRoute = PagePageIdRouteImport.update({
  id: '/page/$pageId',
  path: '/page/$pageId',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginTokenRoute = LoginTokenRouteImport.update({
  id: '/login/$token',
  path: '/login/$token',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login/$token': typeof LoginTokenRoute
  '/page/$pageId': typeof PagePageIdRoute
  '/login': typeof LoginIndexRoute
  '/logout': typeof LogoutIndexRoute
  '/pages': typeof PagesIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/signup': typeof SignupIndexRoute
  '/token': typeof TokenIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login/$token': typeof LoginTokenRoute
  '/page/$pageId': typeof PagePageIdRoute
  '/login': typeof LoginIndexRoute
  '/logout': typeof LogoutIndexRoute
  '/pages': typeof PagesIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/signup': typeof SignupIndexRoute
  '/token': typeof TokenIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login/$token': typeof LoginTokenRoute
  '/page/$pageId': typeof PagePageIdRoute
  '/login/': typeof LoginIndexRoute
  '/logout/': typeof LogoutIndexRoute
  '/pages/': typeof PagesIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/token/': typeof TokenIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login/$token'
    | '/page/$pageId'
    | '/login'
    | '/logout'
    | '/pages'
    | '/profile'
    | '/signup'
    | '/token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login/$token'
    | '/page/$pageId'
    | '/login'
    | '/logout'
    | '/pages'
    | '/profile'
    | '/signup'
    | '/token'
  id:
    | '__root__'
    | '/'
    | '/login/$token'
    | '/page/$pageId'
    | '/login/'
    | '/logout/'
    | '/pages/'
    | '/profile/'
    | '/signup/'
    | '/token/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginTokenRoute: typeof LoginTokenRoute
  PagePageIdRoute: typeof PagePageIdRoute
  LoginIndexRoute: typeof LoginIndexRoute
  LogoutIndexRoute: typeof LogoutIndexRoute
  PagesIndexRoute: typeof PagesIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
  TokenIndexRoute: typeof TokenIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/AppRoutes': {
      id: '/AppRoutes'
      path: ''
      fullPath: '/AppRoutes'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/login/$token': {
      id: '/login/$token'
      path: '/login/$token'
      fullPath: '/login/$token'
      preLoaderRoute: typeof LoginTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/page/$pageId': {
      id: '/page/$pageId'
      path: '/page/$pageId'
      fullPath: '/page/$pageId'
      preLoaderRoute: typeof PagePageIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout/': {
      id: '/logout/'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pages/': {
      id: '/pages/'
      path: '/pages'
      fullPath: '/pages'
      preLoaderRoute: typeof PagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/token/': {
      id: '/token/'
      path: '/token'
      fullPath: '/token'
      preLoaderRoute: typeof TokenIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pages/api/getPageList': {
      id: '/pages/api/getPageList'
      path: ''
      fullPath: '/pages/api/getPageList'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './pages/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './pages/AppRoutes' {
  const createFileRoute: CreateFileRoute<
    '/AppRoutes',
    FileRoutesByPath['/AppRoutes']['parentRoute'],
    FileRoutesByPath['/AppRoutes']['id'],
    FileRoutesByPath['/AppRoutes']['path'],
    FileRoutesByPath['/AppRoutes']['fullPath']
  >
}
declare module './pages/login/$token' {
  const createFileRoute: CreateFileRoute<
    '/login/$token',
    FileRoutesByPath['/login/$token']['parentRoute'],
    FileRoutesByPath['/login/$token']['id'],
    FileRoutesByPath['/login/$token']['path'],
    FileRoutesByPath['/login/$token']['fullPath']
  >
}
declare module './pages/page/$pageId' {
  const createFileRoute: CreateFileRoute<
    '/page/$pageId',
    FileRoutesByPath['/page/$pageId']['parentRoute'],
    FileRoutesByPath['/page/$pageId']['id'],
    FileRoutesByPath['/page/$pageId']['path'],
    FileRoutesByPath['/page/$pageId']['fullPath']
  >
}
declare module './pages/login/index' {
  const createFileRoute: CreateFileRoute<
    '/login/',
    FileRoutesByPath['/login/']['parentRoute'],
    FileRoutesByPath['/login/']['id'],
    FileRoutesByPath['/login/']['path'],
    FileRoutesByPath['/login/']['fullPath']
  >
}
declare module './pages/logout/index' {
  const createFileRoute: CreateFileRoute<
    '/logout/',
    FileRoutesByPath['/logout/']['parentRoute'],
    FileRoutesByPath['/logout/']['id'],
    FileRoutesByPath['/logout/']['path'],
    FileRoutesByPath['/logout/']['fullPath']
  >
}
declare module './pages/pages/index' {
  const createFileRoute: CreateFileRoute<
    '/pages/',
    FileRoutesByPath['/pages/']['parentRoute'],
    FileRoutesByPath['/pages/']['id'],
    FileRoutesByPath['/pages/']['path'],
    FileRoutesByPath['/pages/']['fullPath']
  >
}
declare module './pages/profile/index' {
  const createFileRoute: CreateFileRoute<
    '/profile/',
    FileRoutesByPath['/profile/']['parentRoute'],
    FileRoutesByPath['/profile/']['id'],
    FileRoutesByPath['/profile/']['path'],
    FileRoutesByPath['/profile/']['fullPath']
  >
}
declare module './pages/signup/index' {
  const createFileRoute: CreateFileRoute<
    '/signup/',
    FileRoutesByPath['/signup/']['parentRoute'],
    FileRoutesByPath['/signup/']['id'],
    FileRoutesByPath['/signup/']['path'],
    FileRoutesByPath['/signup/']['fullPath']
  >
}
declare module './pages/token/index' {
  const createFileRoute: CreateFileRoute<
    '/token/',
    FileRoutesByPath['/token/']['parentRoute'],
    FileRoutesByPath['/token/']['id'],
    FileRoutesByPath['/token/']['path'],
    FileRoutesByPath['/token/']['fullPath']
  >
}
declare module './pages/pages/api/getPageList' {
  const createFileRoute: CreateFileRoute<
    '/pages/api/getPageList',
    FileRoutesByPath['/pages/api/getPageList']['parentRoute'],
    FileRoutesByPath['/pages/api/getPageList']['id'],
    FileRoutesByPath['/pages/api/getPageList']['path'],
    FileRoutesByPath['/pages/api/getPageList']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginTokenRoute: LoginTokenRoute,
  PagePageIdRoute: PagePageIdRoute,
  LoginIndexRoute: LoginIndexRoute,
  LogoutIndexRoute: LogoutIndexRoute,
  PagesIndexRoute: PagesIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
  TokenIndexRoute: TokenIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
